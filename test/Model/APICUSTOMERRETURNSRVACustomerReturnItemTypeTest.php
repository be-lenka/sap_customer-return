<?php
/**
 * APICUSTOMERRETURNSRVACustomerReturnItemTypeTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  BeLenka\SAP\CustomerReturn
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Customer Return (A2X)
 *
 * You can use this service to integrate external applications with customer return processing in SAP S/4HANA Cloud. In every API call, you can make use of the following operations:   - You can retrieve returns orders. Apply any of the filters provided or retrieve all existing data.   - You can create returns orders. Note that you must use “deep insert” requests (a header plus the following entities: header partner, header pricing element, item, item partner, and item pricing element). You cannot create headers without including any related entities.   - For existing returns orders, you can create new items. Note that you must use “deep insert” requests (with the following entities: item partner and item pricing element). You cannot create items without including any related entities.   - For existing returns orders, you can add additional business partners at header and item levels.   - For existing returns orders, you can update the header, header partner, header pricing element, item, item partner, and item pricing element.   - For existing returns orders, you can delete the header, header partner, header pricing element, item, item partner, and item pricing element.
 *
 * The version of the OpenAPI document: 1.1.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace BeLenka\SAP\CustomerReturn\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * APICUSTOMERRETURNSRVACustomerReturnItemTypeTest Class Doc Comment
 *
 * @category    Class
 * @description APICUSTOMERRETURNSRVACustomerReturnItemType
 * @package     BeLenka\SAP\CustomerReturn
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class APICUSTOMERRETURNSRVACustomerReturnItemTypeTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "APICUSTOMERRETURNSRVACustomerReturnItemType"
     */
    public function testAPICUSTOMERRETURNSRVACustomerReturnItemType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customer_return"
     */
    public function testPropertyCustomerReturn()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customer_return_item"
     */
    public function testPropertyCustomerReturnItem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "higher_level_item"
     */
    public function testPropertyHigherLevelItem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customer_return_item_category"
     */
    public function testPropertyCustomerReturnItemCategory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customer_return_item_text"
     */
    public function testPropertyCustomerReturnItemText()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchase_order_by_customer"
     */
    public function testPropertyPurchaseOrderByCustomer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "material"
     */
    public function testPropertyMaterial()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "material_by_customer"
     */
    public function testPropertyMaterialByCustomer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "requested_quantity"
     */
    public function testPropertyRequestedQuantity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "requested_quantity_unit"
     */
    public function testPropertyRequestedQuantityUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "item_gross_weight"
     */
    public function testPropertyItemGrossWeight()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "item_net_weight"
     */
    public function testPropertyItemNetWeight()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "item_weight_unit"
     */
    public function testPropertyItemWeightUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "item_volume"
     */
    public function testPropertyItemVolume()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "item_volume_unit"
     */
    public function testPropertyItemVolumeUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "transaction_currency"
     */
    public function testPropertyTransactionCurrency()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "net_amount"
     */
    public function testPropertyNetAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "subtotal1_amount"
     */
    public function testPropertySubtotal1Amount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "subtotal2_amount"
     */
    public function testPropertySubtotal2Amount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "subtotal3_amount"
     */
    public function testPropertySubtotal3Amount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "subtotal4_amount"
     */
    public function testPropertySubtotal4Amount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "subtotal5_amount"
     */
    public function testPropertySubtotal5Amount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "subtotal6_amount"
     */
    public function testPropertySubtotal6Amount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "material_group"
     */
    public function testPropertyMaterialGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "batch"
     */
    public function testPropertyBatch()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "production_plant"
     */
    public function testPropertyProductionPlant()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "storage_location"
     */
    public function testPropertyStorageLocation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "shipping_point"
     */
    public function testPropertyShippingPoint()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "shipping_type"
     */
    public function testPropertyShippingType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "delivery_priority"
     */
    public function testPropertyDeliveryPriority()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "incoterms_classification"
     */
    public function testPropertyIncotermsClassification()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "incoterms_transfer_location"
     */
    public function testPropertyIncotermsTransferLocation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "incoterms_location1"
     */
    public function testPropertyIncotermsLocation1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "incoterms_location2"
     */
    public function testPropertyIncotermsLocation2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customer_payment_terms"
     */
    public function testPropertyCustomerPaymentTerms()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_tax_classification1"
     */
    public function testPropertyProductTaxClassification1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_tax_classification2"
     */
    public function testPropertyProductTaxClassification2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_tax_classification3"
     */
    public function testPropertyProductTaxClassification3()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_tax_classification4"
     */
    public function testPropertyProductTaxClassification4()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_tax_classification5"
     */
    public function testPropertyProductTaxClassification5()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_tax_classification6"
     */
    public function testPropertyProductTaxClassification6()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_tax_classification7"
     */
    public function testPropertyProductTaxClassification7()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_tax_classification8"
     */
    public function testPropertyProductTaxClassification8()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_tax_classification9"
     */
    public function testPropertyProductTaxClassification9()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sales_document_rjcn_reason"
     */
    public function testPropertySalesDocumentRjcnReason()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "item_billing_block_reason"
     */
    public function testPropertyItemBillingBlockReason()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "profit_center"
     */
    public function testPropertyProfitCenter()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "rets_mgmt_process"
     */
    public function testPropertyRetsMgmtProcess()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "rets_mgmt_process_item"
     */
    public function testPropertyRetsMgmtProcessItem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "return_reason"
     */
    public function testPropertyReturnReason()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "rets_mgmt_processing_block"
     */
    public function testPropertyRetsMgmtProcessingBlock()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cust_ret_itm_follow_up_activity"
     */
    public function testPropertyCustRetItmFollowUpActivity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "returns_material_has_been_received"
     */
    public function testPropertyReturnsMaterialHasBeenReceived()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "returns_refund_type"
     */
    public function testPropertyReturnsRefundType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "returns_refund_procg_mode"
     */
    public function testPropertyReturnsRefundProcgMode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "rets_prod_valn_is_suspended"
     */
    public function testPropertyRetsProdValnIsSuspended()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "returns_refund_extent"
     */
    public function testPropertyReturnsRefundExtent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "prelim_refund_is_determined"
     */
    public function testPropertyPrelimRefundIsDetermined()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "returns_refund_rjcn_reason"
     */
    public function testPropertyReturnsRefundRjcnReason()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "replacement_material"
     */
    public function testPropertyReplacementMaterial()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "replacement_material_quantity"
     */
    public function testPropertyReplacementMaterialQuantity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "replacement_material_qty_unit"
     */
    public function testPropertyReplacementMaterialQtyUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "replacement_material_is_requested"
     */
    public function testPropertyReplacementMaterialIsRequested()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "replacement_matl_supplying_plant"
     */
    public function testPropertyReplacementMatlSupplyingPlant()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "next_plant_for_follow_up_activity"
     */
    public function testPropertyNextPlantForFollowUpActivity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "returns_transshipment_plant"
     */
    public function testPropertyReturnsTransshipmentPlant()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supplier"
     */
    public function testPropertySupplier()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supplier_ret_matl_authzn"
     */
    public function testPropertySupplierRetMatlAuthzn()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "suplr_ret_matl_authzn_is_required"
     */
    public function testPropertySuplrRetMatlAuthznIsRequired()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customer_ret_matl_insp_result_code"
     */
    public function testPropertyCustomerRetMatlInspResultCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "next_fllw_up_activity_for_matl_insp"
     */
    public function testPropertyNextFllwUpActivityForMatlInsp()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ret_matl_insp_result_code"
     */
    public function testPropertyRetMatlInspResultCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_is_inspected_at_cust_site"
     */
    public function testPropertyProductIsInspectedAtCustSite()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cust_ret_matl_authzn"
     */
    public function testPropertyCustRetMatlAuthzn()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "crm_logical_system"
     */
    public function testPropertyCrmLogicalSystem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "crm_object_uuid"
     */
    public function testPropertyCrmObjectUuid()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "crm_object_id"
     */
    public function testPropertyCrmObjectId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "crm_object_type"
     */
    public function testPropertyCrmObjectType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "rets_mgmt_itm_log_procg_status"
     */
    public function testPropertyRetsMgmtItmLogProcgStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "rets_mgmt_itm_compn_procg_status"
     */
    public function testPropertyRetsMgmtItmCompnProcgStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "rets_mgmt_itm_procg_status"
     */
    public function testPropertyRetsMgmtItmProcgStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "returns_document_status"
     */
    public function testPropertyReturnsDocumentStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "returns_document_approval_status"
     */
    public function testPropertyReturnsDocumentApprovalStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sd_process_status"
     */
    public function testPropertySdProcessStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "reference_sd_document"
     */
    public function testPropertyReferenceSdDocument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "reference_sd_document_item"
     */
    public function testPropertyReferenceSdDocumentItem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "reference_sd_document_category"
     */
    public function testPropertyReferenceSdDocumentCategory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sd_document_rejection_status"
     */
    public function testPropertySdDocumentRejectionStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "to_customer_return"
     */
    public function testPropertyToCustomerReturn()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "to_partner"
     */
    public function testPropertyToPartner()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "to_pricing_element"
     */
    public function testPropertyToPricingElement()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "to_process_step"
     */
    public function testPropertyToProcessStep()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "to_related_object"
     */
    public function testPropertyToRelatedObject()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "to_schedule_line"
     */
    public function testPropertyToScheduleLine()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "to_serial_number"
     */
    public function testPropertyToSerialNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "to_text"
     */
    public function testPropertyToText()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
