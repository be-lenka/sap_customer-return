<?php
/**
 * ReturnsOrderItemApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  BeLenka\SAP\CustomerReturn
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Customer Return (A2X)
 *
 * You can use this service to integrate external applications with customer return processing in SAP S/4HANA Cloud. In every API call, you can make use of the following operations:   - You can retrieve returns orders. Apply any of the filters provided or retrieve all existing data.   - You can create returns orders. Note that you must use “deep insert” requests (a header plus the following entities: header partner, header pricing element, item, item partner, and item pricing element). You cannot create headers without including any related entities.   - For existing returns orders, you can create new items. Note that you must use “deep insert” requests (with the following entities: item partner and item pricing element). You cannot create items without including any related entities.   - For existing returns orders, you can add additional business partners at header and item levels.   - For existing returns orders, you can update the header, header partner, header pricing element, item, item partner, and item pricing element.   - For existing returns orders, you can delete the header, header partner, header pricing element, item, item partner, and item pricing element.
 *
 * The version of the OpenAPI document: 1.1.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace BeLenka\SAP\CustomerReturn\Test\Api;

use \BeLenka\SAP\CustomerReturn\Configuration;
use \BeLenka\SAP\CustomerReturn\ApiException;
use \BeLenka\SAP\CustomerReturn\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ReturnsOrderItemApiTest Class Doc Comment
 *
 * @category Class
 * @package  BeLenka\SAP\CustomerReturn
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ReturnsOrderItemApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for aCustomerReturnCustomerReturnToItemGet
     *
     * Reads all items of a specific returns order..
     *
     */
    public function testACustomerReturnCustomerReturnToItemGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for aCustomerReturnCustomerReturnToItemPost
     *
     * Creates one or more items for a specific returns order..
     *
     */
    public function testACustomerReturnCustomerReturnToItemPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for aCustomerReturnItemCustomerReturnCustomerReturnCustomerReturnItemCustomerReturnItemDelete
     *
     * Deletes a specific returns order item..
     *
     */
    public function testACustomerReturnItemCustomerReturnCustomerReturnCustomerReturnItemCustomerReturnItemDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for aCustomerReturnItemCustomerReturnCustomerReturnCustomerReturnItemCustomerReturnItemGet
     *
     * Reads a specific returns order item..
     *
     */
    public function testACustomerReturnItemCustomerReturnCustomerReturnCustomerReturnItemCustomerReturnItemGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for aCustomerReturnItemCustomerReturnCustomerReturnCustomerReturnItemCustomerReturnItemPatch
     *
     * Update a specific returns order item..
     *
     */
    public function testACustomerReturnItemCustomerReturnCustomerReturnCustomerReturnItemCustomerReturnItemPatch()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for aCustomerReturnItemCustomerReturnCustomerReturnCustomerReturnItemCustomerReturnItemToCustomerReturnGet
     *
     * Reads the returns order header for a specific item..
     *
     */
    public function testACustomerReturnItemCustomerReturnCustomerReturnCustomerReturnItemCustomerReturnItemToCustomerReturnGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for aCustomerReturnItemCustomerReturnCustomerReturnCustomerReturnItemCustomerReturnItemToPartnerGet
     *
     * Reads the item-level business partners of a specific item..
     *
     */
    public function testACustomerReturnItemCustomerReturnCustomerReturnCustomerReturnItemCustomerReturnItemToPartnerGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for aCustomerReturnItemCustomerReturnCustomerReturnCustomerReturnItemCustomerReturnItemToPartnerPost
     *
     * Creates a header partner for a returns order..
     *
     */
    public function testACustomerReturnItemCustomerReturnCustomerReturnCustomerReturnItemCustomerReturnItemToPartnerPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for aCustomerReturnItemCustomerReturnCustomerReturnCustomerReturnItemCustomerReturnItemToPricingElementGet
     *
     * Reads the item-level pricing elements of a specific item..
     *
     */
    public function testACustomerReturnItemCustomerReturnCustomerReturnCustomerReturnItemCustomerReturnItemToPricingElementGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for aCustomerReturnItemCustomerReturnCustomerReturnCustomerReturnItemCustomerReturnItemToProcessStepGet
     *
     * Reads the advanced returns process steps of a specific item..
     *
     */
    public function testACustomerReturnItemCustomerReturnCustomerReturnCustomerReturnItemCustomerReturnItemToProcessStepGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for aCustomerReturnItemCustomerReturnCustomerReturnCustomerReturnItemCustomerReturnItemToRelatedObjectGet
     *
     * Reads the related objects of a specific returns order item..
     *
     */
    public function testACustomerReturnItemCustomerReturnCustomerReturnCustomerReturnItemCustomerReturnItemToRelatedObjectGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for aCustomerReturnItemCustomerReturnCustomerReturnCustomerReturnItemCustomerReturnItemToRelatedObjectPost
     *
     * Creates related objects for a specific returns order item..
     *
     */
    public function testACustomerReturnItemCustomerReturnCustomerReturnCustomerReturnItemCustomerReturnItemToRelatedObjectPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for aCustomerReturnItemCustomerReturnCustomerReturnCustomerReturnItemCustomerReturnItemToScheduleLineGet
     *
     * Reads the schedule lines of a specific item..
     *
     */
    public function testACustomerReturnItemCustomerReturnCustomerReturnCustomerReturnItemCustomerReturnItemToScheduleLineGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for aCustomerReturnItemCustomerReturnCustomerReturnCustomerReturnItemCustomerReturnItemToSerialNumberGet
     *
     * Reads the serial numbers of a specific item..
     *
     */
    public function testACustomerReturnItemCustomerReturnCustomerReturnCustomerReturnItemCustomerReturnItemToSerialNumberGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for aCustomerReturnItemCustomerReturnCustomerReturnCustomerReturnItemCustomerReturnItemToTextGet
     *
     * Reads the item-level texts of a specific item..
     *
     */
    public function testACustomerReturnItemCustomerReturnCustomerReturnCustomerReturnItemCustomerReturnItemToTextGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for aCustomerReturnItemGet
     *
     * Reads all returns order items..
     *
     */
    public function testACustomerReturnItemGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for aCustomerReturnItemPartnerCustomerReturnCustomerReturnCustomerReturnItemCustomerReturnItemPartnerFunctionPartnerFunctionToCustomerReturnItemGet
     *
     * Reads the returns order item for a specific item-level business partner..
     *
     */
    public function testACustomerReturnItemPartnerCustomerReturnCustomerReturnCustomerReturnItemCustomerReturnItemPartnerFunctionPartnerFunctionToCustomerReturnItemGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for aCustomerReturnItemPost
     *
     * Creates one or more returns order items..
     *
     */
    public function testACustomerReturnItemPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for aCustomerReturnItemPrcgElmntCustomerReturnCustomerReturnCustomerReturnItemCustomerReturnItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToCustomerReturnItemGet
     *
     * Reads the returns order item for a specific item-level pricing element..
     *
     */
    public function testACustomerReturnItemPrcgElmntCustomerReturnCustomerReturnCustomerReturnItemCustomerReturnItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToCustomerReturnItemGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for aCustomerReturnItemRelatedObjCustomerReturnCustomerReturnCustomerReturnItemCustomerReturnItemSDDocRelatedObjectSequenceNmbrSDDocRelatedObjectSequenceNmbrToCustomerReturnItemGet
     *
     * Reads the returns order item for a specific related object..
     *
     */
    public function testACustomerReturnItemRelatedObjCustomerReturnCustomerReturnCustomerReturnItemCustomerReturnItemSDDocRelatedObjectSequenceNmbrSDDocRelatedObjectSequenceNmbrToCustomerReturnItemGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for aCustomerReturnItemTextCustomerReturnCustomerReturnCustomerReturnItemCustomerReturnItemLanguageLanguageLongTextIDLongTextIDToCustomerReturnItemGet
     *
     * Reads the returns order item for a specific piece of item-level text..
     *
     */
    public function testACustomerReturnItemTextCustomerReturnCustomerReturnCustomerReturnItemCustomerReturnItemLanguageLanguageLongTextIDLongTextIDToCustomerReturnItemGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for aCustomerReturnProcessStepRetsMgmtProcessRetsMgmtProcessRetsMgmtProcessItemRetsMgmtProcessItemRetsMgmtProcItmQtySplitRetsMgmtProcItmQtySplitRetsMgmtProcessStepRetsMgmtProcessStepReturnsDocumentTypeReturnsDocumentTypeReturnsDocumentReturnsDocumentReturnsDocumentItemReturnsDocumentItemToCustomerReturnItemGet
     *
     * Reads the returns order item for a specific advanced returns process step..
     *
     */
    public function testACustomerReturnProcessStepRetsMgmtProcessRetsMgmtProcessRetsMgmtProcessItemRetsMgmtProcessItemRetsMgmtProcItmQtySplitRetsMgmtProcItmQtySplitRetsMgmtProcessStepRetsMgmtProcessStepReturnsDocumentTypeReturnsDocumentTypeReturnsDocumentReturnsDocumentReturnsDocumentItemReturnsDocumentItemToCustomerReturnItemGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for aCustomerReturnScheduleLineCustomerReturnCustomerReturnCustomerReturnItemCustomerReturnItemScheduleLineScheduleLineToCustomerReturnItemGet
     *
     * Reads the returns order item for a specific schedule line..
     *
     */
    public function testACustomerReturnScheduleLineCustomerReturnCustomerReturnCustomerReturnItemCustomerReturnItemScheduleLineScheduleLineToCustomerReturnItemGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
